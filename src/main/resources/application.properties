debug=false
spring.main.banner-mode=console


logging.level.org=off
logging.level.tomcat=off
logging.level.org.hibernate=off
logging.level.org.springframework=off
logging.level.org.springframework.web=off
logging.level.com.kamprzewoj.queststore=debug
logging.level.root=off
logging.level.web=debug
logging.level.sql=off
#logging.pattern.console=
#logging.file=spring-boot-log.log
#logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n


#TODO Spring Data REST
#todo @RepositoryRestResource(path="b")
#spring.data.rest.default-media-type=application/json
spring.data.rest.detection-strategy=annotated
spring.data.rest.default-media-type=application/hal+json

#todo HTTPS
#keytool -genkey -alias bootsecurity -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore bootsecurity.p12 -validity 3650
server.port=8443
server.ssl.enabled=true
server.ssl.key-store: src/main/resources/bootsecurity.p12
server.ssl.key-store-password: rootroot
server.ssl.keyStoreType: PKCS12
server.ssl.keyAlias: bootsecurity


#//todo Spring MVC
#spring.mvc.contentnegotiation.media-types.=
#spring.mvc.contentnegotiation.media-types.


#todo DataBase
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
# TOdo what is that ?
#spring.datasource.initialization-mode=always
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL82Dialect
# TOdo what is that ?
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.open-in-view=true

#todo EndPointBase
spring.mvc.servlet.path=/api
spring.data.rest.base-path=/rest
#server.servlet.context-path=/context
#spring.webservices.path=/webservices


#todo Actuator
#https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-monitoring.html
#http://localhost:8080/api/actuator/mappings
#http://localhost:8080/api/actuator
#http://localhost:8080/api/actuator/httptrace
#http://localhost:8080/api/actuator/auditevents
#http://localhost:8080/api/actuator/threaddump
management.endpoint.conditions.enabled=true
management.endpoints.enabled-by-default=true
management.endpoints.jmx.exposure.include=*
management.endpoints.web.exposure.include=*
management.endpoints.web.path-mapping.mappings=*
#management.server.address=127.0.0.1
management.endpoint.mappings.enabled=true
#management.endpoints.web.base-path=/actuator
#management.server.port=8080


#todo CORS Support
#management.endpoints.web.cors.allowed-origins=https://example.com
management.endpoints.web.cors.allowed-methods=*
management.endpoints.web.cors.allowed-origins=*

#todo WEB
#welcome.message: QuestStore
#spring.thymeleaf.cache=false

#todo RDS
#spring.datasource.platform=postgres
#spring.datasource.url=jdbc:postgresql://codecooler.c50wtcevbpsv.eu-central-1.rds.amazonaws.com/codecooler2
#spring.datasource.username=postgres
#spring.datasource.password=c8mbVsQqY7kFBr5Q5c8H

##todo local
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/codecooler
spring.datasource.username=postgres
spring.datasource.password=postgres

#todo snipets
#spring.datasource.platform=postgres
#spring.datasource.url=jdbc:postgresql://localhost:5432/snipets
#spring.datasource.username=postgres
#spring.datasource.password=postgres